#!/usr/bin/env bash

set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
# set -x          # enable debugging

DEBUG='1' ; # Blank ('') for no DEBUG

build_dir=$1
cache_dir=$2
bp_dir=$(cd $(dirname $0); cd ..; pwd)
vendor_dir=$build_dir/vendor
# JRE_ARHIVE=jre-8u66-linux-x64.gz
JAVA_VERSION_MAJOR=8 ;
JAVA_VERSION_MINOR=66 ;
JAVA_VERSION_BUILD=17 ;
JRE_ARHIVE="jre-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.gz"
# JRE_ARHIVE_FILE=$bp_dir/files/jre-8u66-linux-x64.gz
JRE_ARHIVE_FILE=$bp_dir/files/$JRE_ARHIVE

# CF Common
BUILDPACK_PATH=$bp_dir
export BUILDPACK_PATH
source $bp_dir/compile-extensions/lib/common
# END CF Common
source $bp_dir/bin/common.sh

mkdir -p $vendor_dir

status "Checking for java."

# # # BEGIN Fetch Java (in case you do not have a JRE in the "files" folder of your buildpack)
thisDir=`pwd` ;

if [[ $DEBUG ]] ; then
  for x in thisDir build_dir cache_dir bp_dir ; do
    echo "DEBUG: $x = ${!x}" ;
    cd ${!x} ;
    ls -lart ;
    echo ;
  done ;
  cd $thisDir ;
fi ;

if [[ -e $build_dir/vendored-jenkins.war ]] ; then
  cd $build_dir ;
  # tar xf vendored-jenkins.war ;
  unzip -q vendored-jenkins.war ;
  cd $thisDir ;

  if [[ $DEBUG ]] ; then
    for x in build_dir ; do
      echo "DEBUG: $x = ${!x}" ;
      cd ${!x} ;
      ls -lart ;
      echo ;
    done ;
    cd $thisDir ;
  fi ;

fi ;

[[ -e $bp_dir/files ]] || mkdir -p $bp_dir/files ;
cd $build_dir ; echo -n 'build_dir ' ; pwd ;
cd $bp_dir/files ; pwd ;
javaBase=`basename "$JRE_ARHIVE_FILE"` ;
if [[ ! -e $javaBase ]] ; then
  # http://download.oracle.com/otn/java/jdk/8u66-b17/server-jre-8u66-linux-x64.tar.gz
  u=http://download.oracle.com/otn-pub/java/jdk ;
  u="$u/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}" ;
  u="$u/server-jre-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz" ;
  curl --fail --silent --location --retry 3 \
    --header "Cookie: oraclelicense=accept-securebackup-cookie; " \
    "$u" \
    > $javaBase ;
  [[ -e $javaBase ]] || echo "ERROR: Failed to download $javaBase from Oracle.  $u" ;
  ls -l $javaBase ;
fi ;
cd $thisDir ;
# # # END Fetch Java

status "Installing java."

# cp $JRE_ARHIVE_FILE $vendor_dir
cd $vendor_dir
tar xzf $JRE_ARHIVE_FILE
# ./$JRE_ARHIVE
# rm $JRE_ARHIVE
JRE_DIR=$vendor_dir/$(ls -l | tr " " "\n" | egrep '^j(re|dk)')
status "JRE_DIR=$JRE_DIR"
mv $JRE_DIR jre

status "Repack jenkins.war"
cd $build_dir
zip -q -r jenkins.war * -x "vendor/*" -x ".profile.d/*" -x "*.war"

# Update the PATH
status "Building runtime environment"
# see this script
# https://github.com/cloudfoundry/dea_ng/blob/e39ad94e5ea71c33ce91333803a1a956d652a738/lib/dea/starting/startup_script_generator.rb
mkdir -p $build_dir/.profile.d
# $HOME is set here https://github.com/cloudfoundry/dea_ng/blob/c2217e5fbcb866c9f4b6fd248b39138a83cbb479/lib/dea/starting/env.rb#L15
echo "export PATH=\"\$HOME/vendor/jre/bin:\$HOME/bin:\$PATH\";" > $build_dir/.profile.d/jre.sh

# Make any build_dir binaries available: 
[[ -e $build_dir/bin ]] || mkdir $build_dir/bin ;
mv $bp_dir/build_dir_bin/* $build_dir/bin/ ;

#
